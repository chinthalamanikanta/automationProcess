name: Build and Deploy to AKS
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'
          java-package: 'jdk'
      - name: Build with Maven
        run: mvn clean install
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: manicontainer.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build and push Docker image
        id: build-image
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          docker build -t manicontainer.azurecr.io/chm80076/ravi:latest .
          docker push manicontainer.azurecr.io/chm80076/ravi:latest
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
    outputs:
      image-tag: ${{ steps.build-image.outputs.IMAGE_TAG }}


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Authenticate with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: maniRG
          cluster-name: maniaks
      - name: Deploy to AKS
        run: |
          # Replace <IMAGE_TAG> in deployment.yaml with the actual image tag
          sed -i "s|latest|${{ needs.build.outputs.image-tag }}|g" /home/runner/work/automationProcess/automationProcess/k8s/deployment.yaml
          # Apply Kubernetes manifests
          kubectl apply -f /home/runner/work/automationProcess/automationProcess/k8s/deployment.yaml --validate=false
          kubectl apply -f /home/runner/work/automationProcess/automationProcess/k8s/service.yaml --validate=false
          # Wait for deployment to complete
          kubectl rollout status deployment/raviteja --timeout=1200s || true
      - name: Debug Pod Status (if rollout fails)
        if: ${{ failure() }}  # Only run if the previous step fails
        run: |
          echo "Debugging failed deployment..."
          kubectl get pods -l app=java-backend
          kubectl describe pod -l app=java-backend          
          kubectl logs -l app=java-backend
