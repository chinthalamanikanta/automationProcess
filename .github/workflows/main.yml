name: Build and Deploy to AKS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Java using Temurin (Adoptium's updated distribution name)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'
          java-package: 'jdk'

      # Build the application using Maven
      - name: Build with Maven
        run: mvn clean install

      - name: List target directory for verification
        run: ls -l target/

      # Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: manicontainer.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          docker build -t manicontainer.azurecr.io/chm80076/backendcode:$IMAGE_TAG .
          docker push manicontainer.azurecr.io/chm80076/backendcode:$IMAGE_TAG

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Ensure code is checked out in deploy job

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group maniRG --name maniaks

      - name: Set kubectl context
        run: kubectl config use-context <your-cluster-context>

      - name: Verify Kubernetes API connectivity
        run: kubectl cluster-info

      - name: Print working directory
        run: pwd

      - name: List files in the root directory
        run: ls -l

      - name: List files in the home directory
        run: ls -l /home/runner/

      - name: List files in the work directory
        run: ls -l /home/runner/work/

      - name: List files in the current repository directory
        run: ls -l /home/runner/work/automationProcess/automationProcess/

      - name: List files in the k8s directory
        run: ls -l /home/runner/work/automationProcess/automationProcess/k8s/

      # Deploy to AKS
      - name: Deploy to AKS
        run: |
          kubectl apply -f /home/runner/work/automationProcess/automationProcess/k8s/deployment.yaml --validate=false
          kubectl apply -f /home/runner/work/automationProcess/automationProcess/k8s/service.yaml --validate=false
          kubectl rollout status deployment/java-backend-deployment
